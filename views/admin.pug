extends layout.pug

include mixins.pug

block vars
    - var title = "Admin"

block sidebar-menu
    ul(class="list-unstyled components")
        p #{user.username}
        li
            a(href="#") Home
        li
            a(href="#") Profile

    ul(class="list-unstyled components")
        p Admin Panel
        li(class="active")
            a(href="#" id="workoutLink") Workouts
        li
            a(href="#" id="exerciseLink") Exercises
        li
            a(href="#" id="memberLink") Members

block content
    div(class="container-fluid" id="content")
        div(class="row" id="workouts")
            include workouts.pug

        div(class="row" id="exercises" style="display:none")
            include exercises.pug

        div(class="row" id="members" style="display:none")
            include members.pug
    
    include template_items.pug

    div(class="modal fade" id="removeBlockModal" tabindex="-1" role="dialog" aria-labelledby="removeBlockModalTitle" aria-hidden="true")
        div(class="modal-dialog modal-dialog-centered" role="document")
            div(class="modal-content")
                div(class="modal-header")
                    h5(class="modal-title" id="removeBlockModalTitle") Confirm delete
                    button(type="button" class="close" data-dismiss="modal" aria-label="Close")
                        span(aria-hidden="true"). 
                            &times;
                div(class="modal-body").
                    Are you sure you want to delete this item?
                div(class="modal-footer")
                    button(type="button" class="btn btn-light" data-dismiss="modal") Cancel
                    button(id="confirmRemove" type="button" class="btn btn-danger" data-dismiss="modal") Delete

block scripts
    script(src="https://unpkg.com/web-animations-js@2.3.1/web-animations.min.js")
    script(src="https://unpkg.com/hammerjs@2.0.8/hammer.min.js")
    script(src="https://unpkg.com/muuri@0.7.1/dist/muuri.min.js")

    script(src="//cdnjs.cloudflare.com/ajax/libs/list.js/1.5.0/list.min.js")

    script(src="js/script.js")
    script(src="js/workouts.js")
    script(src="js/exercises.js")
    script(src="js/members.js")
    script(src="js/starRating.js")

    script.
        (function() {
            window.addEventListener('load', function() {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        event.preventDefault();
                        event.stopPropagation();

                        switch (form.getAttribute('id')) {
                            case 'addExerciseForm':
                                if (form.checkValidity() !== false) {
                                    $.ajax({
                                        type: 'POST',
                                        url: form.getAttribute('action'),
                                        data: $(form).serialize(),
                                    }).done(function(data, textStatus, jqXHR) {
                                        $(form).children('.alert-danger').hide();
                                        $(form).children('.alert-success').html('Exercise added!').show().delay(5000).fadeOut(200);
                                        $(form).find('input:text, textarea').val('');
                                        $(form).find('input:radio').removeAttr('checked').removeAttr('selected');
                                        $(form).find('.rating span').removeClass('checked selected');
                                        $(form).find('.rating i').removeClass('fas').addClass('far');
                                        form.classList.remove('was-validated');
                                        fetchExercises(populateExerciseResults);
                                    }).fail(function(jqXHR, textStatus, err) {
                                        $(form).children('.alert-danger').html(jqXHR.responseText).show().delay(5000).fadeOut(200);
                                    });
                                } else {
                                    form.classList.add('was-validated');
                                    if (!$(form).find('input[name=exDifficulty]:checked').val()) {
                                        $(form).find('.rating .invalid-feedback').show();
                                    } else {
                                        $(form).find('.rating .invalid-feedback').hide();
                                    }
                                }
                                break;
                            
                            case 'addWorkoutForm':
                                var formValid = form.checkValidity();
                                if (formValid === false) {
                                    form.classList.add('was-validated');
                                }

                                if (checkValidWorkout() !== false && formValid !== false) {
                                    var formArray = $(form).serializeArray();
                                    var formData = {};
                                    for (var i = 0; i < formArray.length; i++){
                                        formData[formArray[i]['name']] = formArray[i]['value'];
                                    }

                                    var postData = {
                                        formData: JSON.stringify(formData),
                                        wkData: JSON.stringify(serializeWorkout())
                                    }

                                    $.ajax({
                                        type: 'POST',
                                        url: form.getAttribute('action'),
                                        data: postData,
                                    }).done(function(data, textStatus, jqXHR) {
                                        $(form).children('.alert-danger').hide();
                                        $(form).children('.alert-success').html('Workout added!').show().delay(5000).fadeOut(200);
                                        $(form).find('input:text, textarea').val('');
                                        clearWorkout();
                                        fetchWorkouts(populateWorkoutResults);
                                    }).fail(function(jqXHR, textStatus, err) {
                                        $(form).children('.alert-danger').html(jqXHR.responseText).show().delay(5000).fadeOut(200);
                                    });
                                }
                                
                                break;
                        }
                    }, false);
                });
            }, false);
        })();

        fetchExercises(populateExerciseList, populateExerciseResults);
        fetchWorkouts(populateWorkoutResults);
        populateMemberResults();
